#Start(1667309686305)

  Warning number 27
  /home/runner/work/float-subgraph-uncrashable/float-subgraph-uncrashable/package/src/validation/UncrashableValidation.res:23:5-12

  21 │   | "constant"
  22 │   | "BigDecimal" => true
  23 │   | uncaught => false
  24 │   }
  25 │ }

  unused variable uncaught.


  Warning number 27
  /home/runner/work/float-subgraph-uncrashable/float-subgraph-uncrashable/package/src/validation/UncrashableValidation.res:64:5-12

  62 │       ("unhandled", false)
  63 │     }
  64 │   | uncaught => ("uncaught", false)
  65 │   }
  66 │ }

  unused variable uncaught.


  Warning number 26
  /home/runner/work/float-subgraph-uncrashable/float-subgraph-uncrashable/package/src/validation/UncrashableValidation.res:71:9-12

  69 ┆ if configEntityMap->Js.Dict.get(rootName)->Option.isSome {
  70 ┆   let entity = configEntityMap->Js.Dict.unsafeGet(rootName)->Obj.magic
  71 ┆   let kind = entity["kind"]
  72 ┆   let fields = entity["fields"]
  73 ┆ 

  unused variable kind.


  Warning number 26
  /home/runner/work/float-subgraph-uncrashable/float-subgraph-uncrashable/package/src/validation/UncrashableValidation.res:158:19-27

  156 ┆ ->Js.Dict.get("setters")
  157 ┆ ->Option.map(setterFunctions => {
  158 ┆   let functions = setterFunctions->Array.map(setter => {
  159 ┆     let functionName = setter["name"]
  160 ┆     let functionSetterFields = setter["fields"]->Option.getWithDefault
      ┆ ([])

  unused variable functions.


  Warning number 26
  /home/runner/work/float-subgraph-uncrashable/float-subgraph-uncrashable/package/src/validation/UncrashableValidation.res:164:23-34

  162 ┆   functionSetterFields->Js.Array.isArray && functionSetterFields->Arra
      ┆ y.length > 0
  163 ┆ ) {
  164 ┆   let fieldTypeDef = functionSetterFields->Array.map(field => {
  165 ┆     if fieldsMap->Js.Dict.get(field)->Option.isSome {
  166 ┆       ()

  unused variable fieldTypeDef.


  Warning number 26
  /home/runner/work/float-subgraph-uncrashable/float-subgraph-uncrashable/package/src/validation/UncrashableValidation.res:188:19-26

  186 ┆ ->Js.Dict.get("entityId")
  187 ┆ ->Option.map(idArgs => {
  188 ┆   let idString = idArgs->Array.map(arg => {
  189 ┆     let argType = arg["type"]->Option.getWithDefault("")
  190 ┆     if !confirmTypeIsSupported(argType) {

  unused variable idString.

#Done(1667309686324)
